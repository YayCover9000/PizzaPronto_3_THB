package de.thb.dim.pizzaProntoTest;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertTrue;import java.awt.Color;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.lang.reflect.Modifier;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;import de.thb.dim.pizzaPronto.ChefVO;/** * The methods of the class ChefVO are tested. *  * Special assert statements are used for testing <br> *  * @author Gabriele Schmidt * @version 4.0 27.02.2020 */public class JUnitTestChefVO {	private static ChefVO chefX;	private static Class<ChefVO> myChefVOClass;	@BeforeEach	public void initEach() {	}	@Test	@DisplayName("Class has 3 instance attributes")	public void test3Attributes() {		myChefVOClass = ChefVO.class;		Field[] attributes = myChefVOClass.getDeclaredFields();		assertEquals(3, attributes.length);	}	@Test	@DisplayName("Information hiding principle (Geheimnisprinzip): Attributes are private")	public void testAttributesPrivate() {		myChefVOClass = ChefVO.class;		Field[] attributes = myChefVOClass.getDeclaredFields();		int modifiersAttributes;		for (Field f : attributes) {			modifiersAttributes = f.getModifiers();			assertTrue(Modifier.isPrivate(modifiersAttributes));		}	}		@Test	@DisplayName("All Methods are public")	public void testMethodsPublic() {		myChefVOClass = ChefVO.class;		Method[] methods = myChefVOClass.getDeclaredMethods();		int modifiersMethods;		for (Method m : methods) {			modifiersMethods = m.getModifiers();			assertTrue(Modifier.isPublic(modifiersMethods));		}	}		@Test	@DisplayName("Default constructor initializes with default values")	public void testDefaultConstructor() {		chefX = new ChefVO();		assertEquals(null, chefX.getLastName());		assertEquals(null, chefX.getFirstName());		assertEquals(null, chefX.getColorApron());	}		@Test	@DisplayName("Initialization constructor with 3 parameters")	public void testIniConstructor() {		String lastName = "BBB";		String fistName = "AAA";		Color apron = Color.MAGENTA;		chefX = new ChefVO(lastName,fistName,apron);		assertEquals(lastName, chefX.getLastName());		assertEquals(fistName, chefX.getFirstName());		assertEquals(apron, chefX.getColorApron());	}		@Test	@DisplayName("Information hiding principle (Geheimnisprinzip): Setter/getter lastname")	public void setGetLastname() {		String lastName = "BBB";		chefX = new ChefVO();		chefX.setLastName(lastName);		assertEquals(lastName, chefX.getLastName());	}		@Test	@DisplayName("Information hiding principle (Geheimnisprinzip): Setter/getter firstname")	public void setGetFirstName() {		String firstName = "BBB";		chefX = new ChefVO();		chefX.setFirstName(firstName);		assertEquals(firstName, chefX.getFirstName());	}		@Test	@DisplayName("Information hiding principle (Geheimnisprinzip): Setter/getter color of apron")	public void setGetColorApron() {		Color apron = Color.BLUE;		chefX = new ChefVO();		chefX.setColorApron(apron);		assertEquals(apron, chefX.getColorApron());	}	}